import { <%= props.name %>Repository } from "#<%= props.name.toLowerCase() %>/domain";
import { default as DefaultUseCase } from "#shared/usecases/use-case";
import { <%= props.name %>Output, <%= props.name %>OutputMapper } from "../dto";

export namespace Get<%= props.name %>UseCase {
  export class UseCase implements DefaultUseCase<Input, Output> {
    constructor(private <%= props.name.toLowerCase() %>Repo: <%= props.name %>Repository.Repository) {}

    async execute(input: Input): Promise<Output> {
      const entity = await this.<%= props.name.toLowerCase() %>Repo.findById(input.id);
      return <%= props.name %>OutputMapper.toOutput(entity);
    }
  }

  export type Input = {
    id: string;
  };

  export type Output = <%= props.name %>Output;
}

export default Get<%= props.name %>UseCase;

//request e response http
//dados - <%= props.name %> - dados de saida

//UseCase -> domain

//infra -> domain
